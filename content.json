{"meta":{"title":"Linsly 的小日子","subtitle":"日常分享","description":null,"author":"Linsly","url":"https://bvbnjghui.github.io","root":"/"},"pages":[],"posts":[{"title":"爬蟲技術探索：批次將Youtube影片加入播放清單","slug":"爬蟲技術探索：批次將Youtube影片加入播放清單","date":"2022-08-18T16:27:02.000Z","updated":"2022-08-18T16:27:02.000Z","comments":true,"path":"爬蟲技術探索：批次將Youtube影片加入播放清單/","link":"","permalink":"https://bvbnjghui.github.io/爬蟲技術探索：批次將Youtube影片加入播放清單/","excerpt":"","text":"前言上次介紹了簡單應用 Javascript，抓出想要的資料進行處理的方法，但是其實瀏覽器的開發者工具還有很多方便的功能，這次要做的是稍微進階一點的爬蟲應用 操作方式 開啟瀏覽器的開發者工具 (F12 或 右鍵檢查)，切換到 Network (網路) 分頁 把影片加入播放清單，並觀察開發者工具的變化 找出剛剛加入播放清單後增加的幾筆紀錄，點擊查看詳細內容 在 Header、Payload 分頁可以看到傳送的各種參數，這些就是加入播放清單會送給伺服器的資料 測試一下，右鍵 -&gt; Copy -&gt; Copy as fetch，fetch 是瀏覽器用來與伺服器溝通的一種方式，有興趣進一步了解可以看看 MDN 把剛剛複製的內容，貼在下面控制台 (console) 並執行 (Enter) 回去檢查播放清單，應該會發現你剛剛選擇的影片加入了兩次，由此確定找到了需要的資料 回到開發者工具，通常 Header 是用來做一些驗證，而 Payload 是一些要溝通的資料，這裡發現有一筆資料 \"ACTION_ADD_VIDEO\", addedVideoId: \"...\"&#125;```，下面有一段```playlistId: \"...\"```，從英文就可以看出，這是決定哪部影片，加入哪個播放清單的地方，因此在執行 fetch 的時候修改這些地方就可以了1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081099. 為了方便使用，可以把它用 Javascript 包裝一下，這裡結合了上一篇提到的一些應用，簡單的範例如下：```var LibbyYoutubeFunc = &#123; key: &apos;YOUR_KEY&apos;, playlist: &apos;YOUR_PLAYLIST_ID&apos;, authorization: &apos;YOUR_AUTHORIZATION&apos;, continuation: &apos;&apos;, videos: [], // 取得影片ID getVideos(數量, 從第幾部影片開始) getVideos: (cnt = 30, offset = 0) =&gt; Array.from(document.querySelectorAll(&apos;a#video-title&apos;)).map(v=&gt; v.href.replace(/.+(?:\\?v=|shorts\\/)([^&amp;]+)/, &apos;$1&apos;).substring(0,11)).slice(offset, offset+cnt), // 批次將影片加入播放清單 addVideos(數量, 從第幾部影片開始) addVideos(cnt = 30, offset = 0)&#123; this.addVideoToList(this.getVideos(cnt, offset)); &#125;, // 取得畫面上的影片數量 countVideos() countVideos: () =&gt; Array.from(document.querySelectorAll(&apos;a#video-title&apos;)).length, // 取得畫面上的影片連結 getLinks(數量, 從第幾部影片開始) getLinks: (cnt = 30, offset = 0) =&gt; Array.from(document.querySelectorAll(&apos;a#video-title&apos;)).slice(offset, offset+cnt).map(v=&gt;v.href), // 將影片加入播放清單 addVideoToList(影片ID) addVideoToList(videos)&#123; if(!videos) return; let actions = JSON.stringify(videos.map(v=&gt;&#123; return &#123;&apos;action&apos;:&apos;ACTION_ADD_VIDEO&apos;,&apos;addedVideoId&apos;:v&#125; &#125;)); fetch(`https://www.youtube.com/youtubei/v1/browse/edit_playlist?key=$&#123;this.key&#125;&amp;prettyPrint=false`, &#123; &quot;headers&quot;: &#123; &quot;accept&quot;: &quot;*/*&quot;, &quot;accept-language&quot;: &quot;zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7&quot;, &quot;authorization&quot;: this.authorization, &quot;content-type&quot;: &quot;application/json&quot;, &quot;sec-ch-ua&quot;: &quot;\\&quot;Chromium\\&quot;;v=\\&quot;96\\&quot;, \\&quot; Not A;Brand\\&quot;;v=\\&quot;99\\&quot;&quot;, &quot;sec-ch-ua-arch&quot;: &quot;\\&quot;x86\\&quot;&quot;, &quot;sec-ch-ua-bitness&quot;: &quot;\\&quot;64\\&quot;&quot;, &quot;sec-ch-ua-full-version&quot;: &quot;\\&quot;96.0.4664.137\\&quot;&quot;, &quot;sec-ch-ua-mobile&quot;: &quot;?0&quot;, &quot;sec-ch-ua-model&quot;: &quot;&quot;, &quot;sec-ch-ua-platform&quot;: &quot;\\&quot;Windows\\&quot;&quot;, &quot;sec-ch-ua-platform-version&quot;: &quot;\\&quot;10.0.0\\&quot;&quot;, &quot;sec-fetch-dest&quot;: &quot;empty&quot;, &quot;sec-fetch-mode&quot;: &quot;same-origin&quot;, &quot;sec-fetch-site&quot;: &quot;same-origin&quot;, &quot;x-goog-authuser&quot;: &quot;0&quot;, &quot;x-goog-pageid&quot;: &quot;112278217211704261332&quot;, &quot;x-goog-visitor-id&quot;: &quot;Cgt5T09vSWw1ZEtzVSiNhaWXBg%3D%3D&quot;, &quot;x-origin&quot;: &quot;https://www.youtube.com&quot;, &quot;x-youtube-bootstrap-logged-in&quot;: &quot;true&quot;, &quot;x-youtube-client-name&quot;: &quot;1&quot;, &quot;x-youtube-client-version&quot;: &quot;2.20220801.00.00&quot; &#125;, &quot;referrer&quot;: location.href, &quot;referrerPolicy&quot;: &quot;strict-origin-when-cross-origin&quot;, &quot;body&quot;: `&#123;\\&quot;context\\&quot;:&#123;\\&quot;client\\&quot;:&#123;\\&quot;hl\\&quot;:\\&quot;ru\\&quot;,\\&quot;gl\\&quot;:\\&quot;TW\\&quot;,\\&quot;remoteHost\\&quot;:\\&quot;114.24.219.231\\&quot;,\\&quot;deviceMake\\&quot;:\\&quot;\\&quot;,\\&quot;deviceModel\\&quot;:\\&quot;\\&quot;,\\&quot;visitorData\\&quot;:\\&quot;Cgt5T09vSWw1ZEtzVSiNhaWXBg%3D%3D\\&quot;,\\&quot;userAgent\\&quot;:\\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.137 Safari/537.36,gzip(gfe)\\&quot;,\\&quot;clientName\\&quot;:\\&quot;WEB\\&quot;,\\&quot;clientVersion\\&quot;:\\&quot;2.20220801.00.00\\&quot;,\\&quot;osName\\&quot;:\\&quot;Windows\\&quot;,\\&quot;osVersion\\&quot;:\\&quot;10.0\\&quot;,\\&quot;originalUrl\\&quot;:\\&quot;https://www.youtube.com/channel/UCxWAL-c1psONO_DfG-cq2iA\\&quot;,\\&quot;platform\\&quot;:\\&quot;DESKTOP\\&quot;,\\&quot;clientFormFactor\\&quot;:\\&quot;UNKNOWN_FORM_FACTOR\\&quot;,\\&quot;configInfo\\&quot;:&#123;\\&quot;appInstallData\\&quot;:\\&quot;CI2FpZcGEMvs_RIQt8utBRDLoq4FEKbz_RIQ1IOuBRDm-P0SEMT2_RIQuIuuBRDYmq4FEJa1rgUQ0K2uBRD9-v0SENi-rQUQkfj8Eg%3D%3D\\&quot;&#125;,\\&quot;timeZone\\&quot;:\\&quot;Asia/Taipei\\&quot;,\\&quot;browserName\\&quot;:\\&quot;Chrome\\&quot;,\\&quot;browserVersion\\&quot;:\\&quot;96.0.4664.137\\&quot;,\\&quot;screenWidthPoints\\&quot;:1305,\\&quot;screenHeightPoints\\&quot;:954,\\&quot;screenPixelDensity\\&quot;:1,\\&quot;screenDensityFloat\\&quot;:1,\\&quot;utcOffsetMinutes\\&quot;:480,\\&quot;userInterfaceTheme\\&quot;:\\&quot;USER_INTERFACE_THEME_LIGHT\\&quot;,\\&quot;connectionType\\&quot;:\\&quot;CONN_CELLULAR_4G\\&quot;,\\&quot;memoryTotalKbytes\\&quot;:\\&quot;8000000\\&quot;,\\&quot;mainAppWebInfo\\&quot;:&#123;\\&quot;graftUrl\\&quot;:\\&quot;https://www.youtube.com/channel/UCxWAL-c1psONO_DfG-cq2iA/videos\\&quot;,\\&quot;pwaInstallabilityStatus\\&quot;:\\&quot;PWA_INSTALLABILITY_STATUS_CAN_BE_INSTALLED\\&quot;,\\&quot;webDisplayMode\\&quot;:\\&quot;WEB_DISPLAY_MODE_BROWSER\\&quot;,\\&quot;isWebNativeShareAvailable\\&quot;:true&#125;&#125;,\\&quot;user\\&quot;:&#123;\\&quot;lockedSafetyMode\\&quot;:false&#125;,\\&quot;request\\&quot;:&#123;\\&quot;useSsl\\&quot;:true,\\&quot;internalExperimentFlags\\&quot;:[],\\&quot;consistencyTokenJars\\&quot;:[]&#125;,\\&quot;clickTracking\\&quot;:&#123;\\&quot;clickTrackingParams\\&quot;:\\&quot;CAAQisQGIhMIkYjY6ryo-QIViB5gCh1NawNv\\&quot;&#125;,\\&quot;adSignalsInfo\\&quot;:&#123;\\&quot;params\\&quot;:[&#123;\\&quot;key\\&quot;:\\&quot;dt\\&quot;,\\&quot;value\\&quot;:\\&quot;1659454091942\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;flash\\&quot;,\\&quot;value\\&quot;:\\&quot;0\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;frm\\&quot;,\\&quot;value\\&quot;:\\&quot;0\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_tz\\&quot;,\\&quot;value\\&quot;:\\&quot;480\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_his\\&quot;,\\&quot;value\\&quot;:\\&quot;2\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_h\\&quot;,\\&quot;value\\&quot;:\\&quot;1080\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_w\\&quot;,\\&quot;value\\&quot;:\\&quot;1920\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_ah\\&quot;,\\&quot;value\\&quot;:\\&quot;1040\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_aw\\&quot;,\\&quot;value\\&quot;:\\&quot;1920\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_cd\\&quot;,\\&quot;value\\&quot;:\\&quot;24\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;bc\\&quot;,\\&quot;value\\&quot;:\\&quot;31\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;bih\\&quot;,\\&quot;value\\&quot;:\\&quot;954\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;biw\\&quot;,\\&quot;value\\&quot;:\\&quot;1288\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;brdim\\&quot;,\\&quot;value\\&quot;:\\&quot;0,0,0,0,1920,0,1920,1040,1305,954\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;vis\\&quot;,\\&quot;value\\&quot;:\\&quot;1\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;wgl\\&quot;,\\&quot;value\\&quot;:\\&quot;true\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;ca_type\\&quot;,\\&quot;value\\&quot;:\\&quot;image\\&quot;&#125;]&#125;&#125;,\\&quot;actions\\&quot;:$&#123;actions&#125;,&quot;playlistId&quot;:&quot;$&#123;this.playlist&#125;&quot;&#125;`, &quot;method&quot;: &quot;POST&quot;, &quot;mode&quot;: &quot;cors&quot;, &quot;credentials&quot;: &quot;include&quot; &#125;).then(res=&gt;res.json()).then(data=&gt;&#123; if(data.error) console.log(data.error, videos); &#125;); &#125;, // 模擬捲動行為，取得後面的影片 (未充分測試) getNextVideos()&#123; if(!this.continuation) return; fetch(`https://www.youtube.com/youtubei/v1/browse?key=$&#123;this.key&#125;&amp;prettyPrint=false`, &#123; &quot;headers&quot;: &#123; &quot;accept&quot;: &quot;*/*&quot;, &quot;accept-language&quot;: &quot;zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7&quot;, &quot;authorization&quot;: this.authorization, &quot;content-type&quot;: &quot;application/json&quot;, &quot;sec-ch-ua&quot;: &quot;\\&quot;Chromium\\&quot;;v=\\&quot;96\\&quot;, \\&quot; Not A;Brand\\&quot;;v=\\&quot;99\\&quot;&quot;, &quot;sec-ch-ua-arch&quot;: &quot;\\&quot;x86\\&quot;&quot;, &quot;sec-ch-ua-bitness&quot;: &quot;\\&quot;64\\&quot;&quot;, &quot;sec-ch-ua-full-version&quot;: &quot;\\&quot;96.0.4664.137\\&quot;&quot;, &quot;sec-ch-ua-mobile&quot;: &quot;?0&quot;, &quot;sec-ch-ua-model&quot;: &quot;&quot;, &quot;sec-ch-ua-platform&quot;: &quot;\\&quot;Windows\\&quot;&quot;, &quot;sec-ch-ua-platform-version&quot;: &quot;\\&quot;10.0.0\\&quot;&quot;, &quot;sec-fetch-dest&quot;: &quot;empty&quot;, &quot;sec-fetch-mode&quot;: &quot;same-origin&quot;, &quot;sec-fetch-site&quot;: &quot;same-origin&quot;, &quot;x-goog-authuser&quot;: &quot;0&quot;, &quot;x-goog-pageid&quot;: &quot;112278217211704261332&quot;, &quot;x-goog-visitor-id&quot;: &quot;Cgt5T09vSWw1ZEtzVSimuaWXBg%3D%3D&quot;, &quot;x-origin&quot;: &quot;https://www.youtube.com&quot;, &quot;x-youtube-bootstrap-logged-in&quot;: &quot;true&quot;, &quot;x-youtube-client-name&quot;: &quot;1&quot;, &quot;x-youtube-client-version&quot;: &quot;2.20220801.00.00&quot; &#125;, &quot;referrer&quot;: &quot;https://www.youtube.com/channel/UC_soGpcb7SORsk5yzHLMdTQ/videos&quot;, &quot;referrerPolicy&quot;: &quot;origin-when-cross-origin&quot;, &quot;body&quot;: `&#123;\\&quot;context\\&quot;:&#123;\\&quot;client\\&quot;:&#123;\\&quot;hl\\&quot;:\\&quot;ru\\&quot;,\\&quot;gl\\&quot;:\\&quot;TW\\&quot;,\\&quot;remoteHost\\&quot;:\\&quot;114.24.219.231\\&quot;,\\&quot;deviceMake\\&quot;:\\&quot;\\&quot;,\\&quot;deviceModel\\&quot;:\\&quot;\\&quot;,\\&quot;visitorData\\&quot;:\\&quot;Cgt5T09vSWw1ZEtzVSimuaWXBg%3D%3D\\&quot;,\\&quot;userAgent\\&quot;:\\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.137 Safari/537.36,gzip(gfe)\\&quot;,\\&quot;clientName\\&quot;:\\&quot;WEB\\&quot;,\\&quot;clientVersion\\&quot;:\\&quot;2.20220801.00.00\\&quot;,\\&quot;osName\\&quot;:\\&quot;Windows\\&quot;,\\&quot;osVersion\\&quot;:\\&quot;10.0\\&quot;,\\&quot;originalUrl\\&quot;:\\&quot;https://www.youtube.com/watch?v=1rIlWGVD8u8\\&quot;,\\&quot;platform\\&quot;:\\&quot;DESKTOP\\&quot;,\\&quot;clientFormFactor\\&quot;:\\&quot;UNKNOWN_FORM_FACTOR\\&quot;,\\&quot;configInfo\\&quot;:&#123;\\&quot;appInstallData\\&quot;:\\&quot;CKa5pZcGENiargUQ0K2uBRC3y60FELiLrgUQ5vj9EhDUg64FEKbz_RIQy6KuBRDL7P0SEMT2_RIQlrWuBRD9-v0SENi-rQUQkfj8Eg%3D%3D\\&quot;&#125;,\\&quot;timeZone\\&quot;:\\&quot;Asia/Taipei\\&quot;,\\&quot;browserName\\&quot;:\\&quot;Chrome\\&quot;,\\&quot;browserVersion\\&quot;:\\&quot;96.0.4664.137\\&quot;,\\&quot;screenWidthPoints\\&quot;:1920,\\&quot;screenHeightPoints\\&quot;:954,\\&quot;screenPixelDensity\\&quot;:1,\\&quot;screenDensityFloat\\&quot;:1,\\&quot;utcOffsetMinutes\\&quot;:480,\\&quot;userInterfaceTheme\\&quot;:\\&quot;USER_INTERFACE_THEME_LIGHT\\&quot;,\\&quot;connectionType\\&quot;:\\&quot;CONN_CELLULAR_4G\\&quot;,\\&quot;memoryTotalKbytes\\&quot;:\\&quot;8000000\\&quot;,\\&quot;mainAppWebInfo\\&quot;:&#123;\\&quot;graftUrl\\&quot;:\\&quot;https://www.youtube.com/channel/UC_soGpcb7SORsk5yzHLMdTQ/videos\\&quot;,\\&quot;pwaInstallabilityStatus\\&quot;:\\&quot;PWA_INSTALLABILITY_STATUS_CAN_BE_INSTALLED\\&quot;,\\&quot;webDisplayMode\\&quot;:\\&quot;WEB_DISPLAY_MODE_BROWSER\\&quot;,\\&quot;isWebNativeShareAvailable\\&quot;:true&#125;&#125;,\\&quot;user\\&quot;:&#123;\\&quot;lockedSafetyMode\\&quot;:false&#125;,\\&quot;request\\&quot;:&#123;\\&quot;useSsl\\&quot;:true,\\&quot;internalExperimentFlags\\&quot;:[],\\&quot;consistencyTokenJars\\&quot;:[]&#125;,\\&quot;clickTracking\\&quot;:&#123;\\&quot;clickTrackingParams\\&quot;:\\&quot;CC8Q6IsCGAAiEwjdnaeU1aj5AhUDxUwCHZeIB8s=\\&quot;&#125;,\\&quot;adSignalsInfo\\&quot;:&#123;\\&quot;params\\&quot;:[&#123;\\&quot;key\\&quot;:\\&quot;dt\\&quot;,\\&quot;value\\&quot;:\\&quot;1659460773110\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;flash\\&quot;,\\&quot;value\\&quot;:\\&quot;0\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;frm\\&quot;,\\&quot;value\\&quot;:\\&quot;0\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_tz\\&quot;,\\&quot;value\\&quot;:\\&quot;480\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_his\\&quot;,\\&quot;value\\&quot;:\\&quot;3\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_h\\&quot;,\\&quot;value\\&quot;:\\&quot;1080\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_w\\&quot;,\\&quot;value\\&quot;:\\&quot;1920\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_ah\\&quot;,\\&quot;value\\&quot;:\\&quot;1040\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_aw\\&quot;,\\&quot;value\\&quot;:\\&quot;1920\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;u_cd\\&quot;,\\&quot;value\\&quot;:\\&quot;24\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;bc\\&quot;,\\&quot;value\\&quot;:\\&quot;31\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;bih\\&quot;,\\&quot;value\\&quot;:\\&quot;954\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;biw\\&quot;,\\&quot;value\\&quot;:\\&quot;1903\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;brdim\\&quot;,\\&quot;value\\&quot;:\\&quot;0,0,0,0,1920,0,1920,1040,1920,954\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;vis\\&quot;,\\&quot;value\\&quot;:\\&quot;1\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;wgl\\&quot;,\\&quot;value\\&quot;:\\&quot;true\\&quot;&#125;,&#123;\\&quot;key\\&quot;:\\&quot;ca_type\\&quot;,\\&quot;value\\&quot;:\\&quot;image\\&quot;&#125;]&#125;&#125;,\\&quot;continuation\\&quot;:&quot;$&#123;this.continuation&#125;&quot;&#125;`, &quot;method&quot;: &quot;POST&quot;, &quot;mode&quot;: &quot;cors&quot;, &quot;credentials&quot;: &quot;include&quot; &#125;).then(data=&gt;data.json()).then(res =&gt; &#123; this.videos = []; this.continuation = &apos;&apos;; for(let continuation of res.onResponseReceivedActions[0].appendContinuationItemsAction.continuationItems)&#123; if(continuation.gridVideoRenderer)&#123; this.videos.push(continuation.gridVideoRenderer.videoId); &#125;else if(continuation.continuationItemRenderer)&#123; this.continuation = continuation.continuationItemRenderer.continuationEndpoint.continuationCommand.token; &#125; &#125; &#125;); &#125;, // 把模擬捲動獲得的影片加入播放清單 addStoredVideos()&#123; this.addVideoToList(this.videos); this.videos = []; &#125;,&#125; 上面那段程式，把 key、playlist、authorization 改成自己從 fetch 裡面得到的資料就可以使用了。可以在執行前修改，或者執行後輸入 LibbyYoutubeFunc.key 修改 key 等資料，之後就可以用 LibbyYoutubeFunc.getVideos()、LibbyYoutubeFunc.addVideos(10, 20)執行包裝好的程式，不過好像不能一次加入太多影片，所以我預設一次 30 部影片 結語這篇算是進階的 JS 和 開發者工具運用，雖然沒有複雜的操作，但是如果沒有一點程式碼基礎，可能還是不好理解。如果跳過包裝程式碼那段，加入播放清單其實就是：開發者工具 -&gt; 複製 fetch -&gt; 修改影片 ID -&gt; 執行","categories":[{"name":"網頁技術","slug":"網頁技術","permalink":"https://bvbnjghui.github.io/categories/網頁技術/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"https://bvbnjghui.github.io/tags/Javascript/"},{"name":"爬蟲","slug":"爬蟲","permalink":"https://bvbnjghui.github.io/tags/爬蟲/"},{"name":"Youtube","slug":"Youtube","permalink":"https://bvbnjghui.github.io/tags/Youtube/"},{"name":"網頁開發","slug":"網頁開發","permalink":"https://bvbnjghui.github.io/tags/網頁開發/"}],"author":"me"},{"title":"Javascript應用 - 快速取得全部影片連結","slug":"Javascript應用-快速取得全部影片連結","date":"2022-08-02T03:21:34.000Z","updated":"2022-08-04T16:51:58.000Z","comments":true,"path":"Javascript應用-快速取得全部影片連結/","link":"","permalink":"https://bvbnjghui.github.io/Javascript應用-快速取得全部影片連結/","excerpt":"","text":"前言自從聽說 李李鈴蘭、瑪格麗特.溫特斯、神稻櫻火 畢業後，影片將要轉成不公開，就開始有了如何保存影片的討論。對於 不公開的影片，其實只要加入播放清單，或者將連結記錄下來即可。雖然可以一部一部影片去儲存，但身為網頁工作者，自然會想用一些比較偷懶的方式。 實作這裡會涉及一些簡單的 Javascript: 列表載入所有影片：打開頻道的影片頁面，並不斷下拉畫面，直到每部影片都在畫面上列出來。 打開瀏覽器的開發者工具：按 F12 或 右鍵-&gt;開發者工具-&gt;檢查 使用 js 將每部影片做處理：在開發者工具下方的控制台 (console) 中，輸入要執行的程式碼並按 Enter 執行，這裡我寫的是:Array.from(document.querySelectorAll(&#39;.ytd-grid-renderer #video-title&#39;)).map(v=&gt;`&quot;${v.innerText}&quot;,&quot;${v.href}&quot;`).join(&#39;\\n&#39;) 將獲得的內容儲存：將程式碼執行後，輸出的內容複製並儲存 對資料進行處理：使用編輯器處理格式，製作成表格輸出。通常使用CSV格式，逗號分欄、換行就是新一列。前面輸出的內容可以直接用編輯器做取代，沒有慣用的文字編輯器，也可以使用線上版，如圖可以直接把全部的\\n取代成換行符 製作成表格：另存新檔成CSV(windows可能要改編碼來避免亂碼) 亂碼處理：亂碼不會處理可以匯入到Google Sheets，自動處理好編碼問題!結語這篇文章算是用爬蟲的方式，快速複製並處理需要的內容，下篇文章應該會介紹怎麼用API的方式，快速把影片加入播放清單。","categories":[{"name":"網頁技術","slug":"網頁技術","permalink":"https://bvbnjghui.github.io/categories/網頁技術/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"https://bvbnjghui.github.io/tags/Javascript/"},{"name":"爬蟲","slug":"爬蟲","permalink":"https://bvbnjghui.github.io/tags/爬蟲/"}],"author":"me"},{"title":"Youtube 影片隱私設定","slug":"Youtube-影片隱私設定","date":"2022-08-01T02:09:39.000Z","updated":"2022-08-01T14:51:59.000Z","comments":true,"path":"Youtube-影片隱私設定/","link":"","permalink":"https://bvbnjghui.github.io/Youtube-影片隱私設定/","excerpt":"","text":"最近剛好跟上雲際線幾位 Vtuber 畢業，畢業後頻道影片都轉為不公開，這個「不公開」跟「私人」權限一樣嗎? 雖然以前了解過，但是看討論串各執一詞，讓我不禁懷疑自己的認知。其實 Youtube 的 說明 寫得蠻清楚的: 公開影片 - YouTube 上的所有人都能觀看公開影片，而且也能與其他 YouTube 使用者分享這類影片。上傳完成的公開影片會發布至您的頻道，並顯示在搜尋結果和相關影片清單中。 私人影片 - 只有您自己和指定的使用者可以觀看。私人影片不會顯示在頻道首頁的「影片」分頁中，也不會出現在 YouTube 的搜尋結果中。 不公開影片 - 只有取得連結的使用者可以觀看及分享。不公開影片不會顯示在頻道首頁的「影片」分頁中，除非有人將不公開影片新增至公開的播放清單，否則這類內容也不會顯示在 YouTube 搜尋結果中。就是說公開: 會顯示在頻道、可被搜尋到的一般影片不公開: 知道連結(加入播放清單)才能觀看的影片私人: 只有上傳者本人與指定的使用者能觀看的影片所以假如影片的處置是不公開，那只需要先存進播放清單，或者把連結都記錄下來，以後還是能找到那些影片。","categories":[{"name":"發燒話題","slug":"發燒話題","permalink":"https://bvbnjghui.github.io/categories/發燒話題/"}],"tags":[{"name":"Youtube","slug":"Youtube","permalink":"https://bvbnjghui.github.io/tags/Youtube/"},{"name":"觀看權限","slug":"觀看權限","permalink":"https://bvbnjghui.github.io/tags/觀看權限/"}],"author":"me"},{"title":"踩坑 CSS - position: sticky","slug":"踩坑-CSS-position-sticky","date":"2022-05-13T20:11:50.000Z","updated":"2022-05-14T09:02:26.000Z","comments":true,"path":"踩坑-CSS-position-sticky/","link":"","permalink":"https://bvbnjghui.github.io/踩坑-CSS-position-sticky/","excerpt":"","text":"前言position: sticky 是 CSS3 的屬性，類似於 position: fixed ，但並非根據整個畫面定位，而是可供定位的祖先元素。過去往往要使用 javascript，才能製作根據捲動進度來定位的區塊（如選單），在 position: sticky 出現後可以更方便的達成想要的效果。 使用與 position: fixed 相似，只要設定 position: sticky與定位(top, bottom, left, right)，會根據捲動來吸附定位的區塊就製作完成了。1234.sidebar &#123; position: sticky; top: 20px;&#125; 解決最近在開發的時候，一直沒辦法達到想要的捲動定位效果，而只是類似於 position: relative，於是到處爬文，發現要定位元素的任意祖先元素，不能有 overflow: hidden，否則就會影響定位判斷，造成屬性失效，對此進行修正就正常了。 參考資料position - CSS: Cascading Style Sheets | MDN","categories":[{"name":"網頁技術","slug":"網頁技術","permalink":"https://bvbnjghui.github.io/categories/網頁技術/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"https://bvbnjghui.github.io/tags/CSS/"},{"name":"sticky","slug":"sticky","permalink":"https://bvbnjghui.github.io/tags/sticky/"},{"name":"網頁開發","slug":"網頁開發","permalink":"https://bvbnjghui.github.io/tags/網頁開發/"}],"author":"Linsly"},{"title":"win11 無法連上 NAS VPN 的解決方法","slug":"win11-無法連上-NAS-VPN-的解決方法","date":"2022-05-13T03:42:13.000Z","updated":"2022-05-14T06:39:22.000Z","comments":true,"path":"win11-無法連上-NAS-VPN-的解決方法/","link":"","permalink":"https://bvbnjghui.github.io/win11-無法連上-NAS-VPN-的解決方法/","excerpt":"","text":"原因問題發生原因可以參考這篇:configure-l2tp-ipsec-server-behind-nat-t-device (英文)有興趣可以了解看看，這裡主要提供解決方案 解決辦法修改登錄檔(註冊表)，然後設定 VPN 的數據協議： win + R，執行regedit 找到 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\PolicyAgent 修改 AssumeUDPEncapsulationContextOnSendRule 數值為 2 ，如果沒有找到就新增 DWORD(32位元值) 找到網路設定 - 介面卡設定，右鍵-內容 設定 安全性 - 資料加密 為：需要加密（如果伺服器拒絕就中斷連線）；下面 允許這些通訊協定，只勾選 Microsoft CHAP Version 2(MS-CHAP v2) 重新開機 個人執行完以上步驟就能正常連線，還是連不上可以嘗試後續步驟： 解决Win11连接群晖上的L2TP类型vpn无响应的问题","categories":[{"name":"系統設定","slug":"系統設定","permalink":"https://bvbnjghui.github.io/categories/系統設定/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://bvbnjghui.github.io/tags/windows/"},{"name":"VPN","slug":"VPN","permalink":"https://bvbnjghui.github.io/tags/VPN/"}],"author":"linsly"},{"title":"俄語 - 拼字規則","slug":"俄語-拼字規則","date":"2020-01-21T17:50:24.000Z","updated":"2022-05-14T09:00:40.000Z","comments":true,"path":"俄語-拼字規則/","link":"","permalink":"https://bvbnjghui.github.io/俄語-拼字規則/","excerpt":"","text":"拼字規則（Spelling Rules） Ы - И O - E Я - А Ю - У Г, К, Х, Ж, Ч, Ш, Щ Ж, Ч, Ш, Щ, Ц Г, К, Х, Ж, Ч, Ш, Щ, Ц Г, К, Х, Ж, Ч, Ш, Щ, Ц Ы - И: 「 Г, К, Х, Ж, Ч, Ш, Щ 」後面不接「Ы」，而用「И」。 非重音（unstressed） O - E: 「 Ж, Ч, Ш, Щ, Ц 」 後面不接「 非重音的O 」，而用「 E 」。 Я - А: 「 Г, К, Х, Ж, Ч, Ш, Щ, Ц 」後面不接「 Я 」，而用「 А 」。 Ю - У: 「 Г, К, Х, Ж, Ч, Ш, Щ, Ц 」後面不接「 Ю 」，而用「 У 」。 輔音變化（Consonant Mutation） +л ч ж ш щ п, б, ф, в, м т, к д, з, г с, х ст, ск п - плб - блф - флв - влм - млт - чк - чд - жз - жг - жс - шх - шст - щск - щ 相關連結：Russian Spelling Rules","categories":[{"name":"學習","slug":"學習","permalink":"https://bvbnjghui.github.io/categories/學習/"}],"tags":[{"name":"俄語","slug":"俄語","permalink":"https://bvbnjghui.github.io/tags/俄語/"},{"name":"文法","slug":"文法","permalink":"https://bvbnjghui.github.io/tags/文法/"},{"name":"單字","slug":"單字","permalink":"https://bvbnjghui.github.io/tags/單字/"}],"author":"我"},{"title":"俄語 - 名詞變化","slug":"俄語-名詞變化","date":"2020-01-15T01:10:18.000Z","updated":"2020-01-21T17:48:59.000Z","comments":true,"path":"俄語-名詞變化/","link":"","permalink":"https://bvbnjghui.github.io/俄語-名詞變化/","excerpt":"","text":"俄文中名詞區分詞性（Gender），基本能以字尾區分： 男性（Masculine） 女性（feminine） 中性（neuter） 「輔音」「й」 「а」「я」 「о」「е」 「ь」是男性或者女性。 依據詞性在不同格下的變化也不一樣。格有六種： 主格（Nominative Case） 屬格（Accusative Case） 與格（Dative Case） 賓格（Genitive Case） 工具格（Instrumental Case） 前置格（Prepositional Case）","categories":[{"name":"學習","slug":"學習","permalink":"https://bvbnjghui.github.io/categories/學習/"}],"tags":[{"name":"俄語","slug":"俄語","permalink":"https://bvbnjghui.github.io/tags/俄語/"},{"name":"文法","slug":"文法","permalink":"https://bvbnjghui.github.io/tags/文法/"}],"author":"我"},{"title":"俄語入門?","slug":"俄語入門","date":"2020-01-14T21:03:29.000Z","updated":"2020-01-21T18:36:26.000Z","comments":true,"path":"俄語入門/","link":"","permalink":"https://bvbnjghui.github.io/俄語入門/","excerpt":"","text":"自從之前有漢化組把所謂「漢」化，做成了各種語言，甚至包含動漫原創的語言，我開始對語言感興趣，想學習一些比較困難的語言，原來是打算學習「聖書體」的，但花大力氣去學習一個用不上的語言，總覺得缺乏動力，使用人數多的語言中，困難的除了中文就是俄文比較有名了，於是就這樣開始了我的俄文學習。 開始是在Youtube上面學習俄文的： 認識俄羅斯：伊莉娜俄羅斯較正式的學習俄語：娜塔莎俄語學習單字(英)：RussianPod101 其實都是些不錯的教學影片，但是光看就想學會比較困難，單字詞彙量、文法還是一知半解，於是開始尋找其他資源。 做題目的方式學習：duolingo比較全面的教學網站(英)：Russian Lessons打字練習：線上打字練習 目前看下來網路上俄語學習的中文資源真的不多，於是打算把這裡當作自己的筆記本。","categories":[{"name":"學習","slug":"學習","permalink":"https://bvbnjghui.github.io/categories/學習/"}],"tags":[{"name":"俄語","slug":"俄語","permalink":"https://bvbnjghui.github.io/tags/俄語/"}],"author":"我"}]}